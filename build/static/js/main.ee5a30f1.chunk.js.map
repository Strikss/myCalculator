{"version":3,"sources":["components/DigitButton.js","components/OperationButton.js","App.js","index.js","App.module.css"],"names":["DigitButton","dispatch","digit","onClick","type","actions","ADD_DIGIT","payload","OperationButton","operation","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","afterEquals","currOperand","includes","prevOperand","evaluate","substring","length","sum","prev","parseFloat","curr","isNaN","String","App","useReducer","className","style","container","output","top","bottom","spanTwo","spanOne","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6MAWeA,EATK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/B,OACE,wBACEC,QAAS,kBAAMF,EAAS,CAAEG,KAAMC,EAAQC,UAAWC,QAAS,CAAEL,YADhE,SAGGA,KCMQM,EAXS,SAAC,GAA6B,IAA3BP,EAA0B,EAA1BA,SAAUQ,EAAgB,EAAhBA,UACnC,OACE,wBACEN,QAAS,kBACPF,EAAS,CAAEG,KAAMC,EAAQK,iBAAkBH,QAAS,CAAEE,gBAF1D,SAKGA,KCJMJ,EAAU,CACrBC,UAAW,YACXI,iBAAkB,mBAClBC,MAAO,QACPC,aAAc,eACdC,SAAU,YAGNC,EAAU,SAACC,EAAD,GAA+B,IAArBX,EAAoB,EAApBA,KAAMG,EAAc,EAAdA,QAC9B,OAAQH,GACN,KAAKC,EAAQC,UACX,OACES,EAAMC,aACa,MAAlBT,EAAQL,OAAmC,MAAlBK,EAAQL,MAIhCa,EAAMC,YACD,2BACFD,GADL,IAEEE,YAAaV,EAAQL,MACrBc,aAAa,IAGK,MAAlBT,EAAQL,OAAuC,MAAtBa,EAAME,YAC1BF,EAGNA,EAAME,aACY,MAAlBV,EAAQL,OAAmC,MAAlBK,EAAQL,MAId,MAAlBK,EAAQL,OAAiBa,EAAME,YAAYC,SAAS,KAC/CH,EAGF,2BACFA,GADL,IAEEE,YAAY,GAAD,OAAKF,EAAME,aAAe,IAA1B,OAA+BV,EAAQL,SAR3Ca,EAhBAA,EA4BX,KAAKV,EAAQM,MACX,MAAO,CAAEM,YAAa,GAAIE,YAAa,GAAIV,UAAW,IAGxD,KAAKJ,EAAQK,iBACX,OAAKK,EAAME,aAAgBF,EAAMI,YAI5BJ,EAAME,YAGNF,EAAMI,YAQJ,2BACFJ,GADL,IAEEE,YAAa,GACbR,UAAWF,EAAQE,UACnBU,YAAaC,EAASL,KAXf,2BACFA,GADL,IAEEI,YAAaJ,EAAME,YACnBA,YAAa,GACbR,UAAWF,EAAQE,YAPd,2BAAKM,GAAZ,IAAmBN,UAAWF,EAAQE,YAJ/BM,EAqBX,KAAKV,EAAQQ,SACX,OAAKE,EAAMI,YAGJ,2BACFJ,GADL,IAEEE,YAAaG,EAASL,GACtBN,UAAW,GACXU,YAAa,GACbH,aAAa,IAPND,EAUX,KAAKV,EAAQO,aACX,OAAO,2BACFG,GADL,IAEEE,YAAaF,EAAME,YAAYI,UAC7B,EACAN,EAAME,YAAYK,OAAS,KAIjC,QACE,MAAO,CAAEP,WAKTK,EAAW,SAAC,GAA6C,IAA3CD,EAA0C,EAA1CA,YAAaF,EAA6B,EAA7BA,YAAaR,EAAgB,EAAhBA,UACxCc,EAAM,GACNC,EAAOC,WAAWN,GAClBO,EAAOD,WAAWR,GACtB,GAAIU,MAAMH,IAASG,MAAMD,GAAO,MAAO,GACvC,OAAQjB,GACN,IAAK,IACHc,EAAMK,OAAOJ,EAAOE,GACpB,MAEF,IAAK,IACHH,EAAMK,OAAOJ,EAAOE,GACpB,MAEF,IAAK,IACHH,EAAMK,OAAOJ,EAAOE,GACpB,MAEF,IAAK,IACHH,EAAMK,OAAOJ,EAAOE,GAKxB,OAAOH,GAsDMM,EAnDH,WACV,MAA4DC,qBAC1DhB,EACA,CAAEG,YAAa,GAAIE,YAAa,GAAIV,UAAW,GAAIO,aAAa,IAFlE,0BAASC,EAAT,EAASA,YAAaE,EAAtB,EAAsBA,YAAaV,EAAnC,EAAmCA,UAAaR,EAAhD,KAKA,OACE,sBAAK8B,UAAWC,IAAMC,UAAtB,UACE,sBAAKF,UAAWC,IAAME,OAAtB,UACE,sBAAKH,UAAWC,IAAMG,IAAtB,UACGhB,EADH,IACiBV,KAEjB,qBAAKsB,UAAWC,IAAMI,OAAtB,SAA+BnB,OAEjC,wBACEc,UAAWC,IAAMK,QACjBlC,QAAS,kBAAMF,EAAS,CAAEG,KAAMC,EAAQM,SAF1C,gBAMA,wBACEoB,UAAWC,IAAMM,QACjBnC,QAAS,kBAAMF,EAAS,CAAEG,KAAMC,EAAQO,gBAF1C,iBAMA,cAAC,EAAD,CAAiBX,SAAUA,EAAUQ,UAAU,MAC/C,cAAC,EAAD,CAAaR,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAaD,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAaD,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAiBD,SAAUA,EAAUQ,UAAU,MAC/C,cAAC,EAAD,CAAaR,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAaD,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAaD,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAiBD,SAAUA,EAAUQ,UAAU,MAC/C,cAAC,EAAD,CAAaR,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAaD,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAaD,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAiBD,SAAUA,EAAUQ,UAAU,MAC/C,cAAC,EAAD,CAAaR,SAAUA,EAAUC,MAAM,MACvC,cAAC,EAAD,CAAaD,SAAUA,EAAUC,MAAM,MACvC,wBACE6B,UAAWC,IAAMK,QACjBlC,QAAS,kBAAMF,EAAS,CAAEG,KAAMC,EAAQQ,YAF1C,mBCrKN0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,oBAAoB,IAAM,iBAAiB,OAAS,oBAAoB,QAAU,wB","file":"static/js/main.ee5a30f1.chunk.js","sourcesContent":["import { actions } from \"../App\";\n\nconst DigitButton = ({ dispatch, digit }) => {\n  return (\n    <button\n      onClick={() => dispatch({ type: actions.ADD_DIGIT, payload: { digit } })}\n    >\n      {digit}\n    </button>\n  );\n};\nexport default DigitButton;\n","import { actions } from \"../App\";\n\nconst OperationButton = ({ dispatch, operation }) => {\n  return (\n    <button\n      onClick={() =>\n        dispatch({ type: actions.CHOOSE_OPERATION, payload: { operation } })\n      }\n    >\n      {operation}\n    </button>\n  );\n};\nexport default OperationButton;\n","import { useReducer } from \"react\";\nimport style from \"./App.module.css\";\nimport DigitButton from \"./components/DigitButton\";\nimport OperationButton from \"./components/OperationButton\";\n\nexport const actions = {\n  ADD_DIGIT: \"ADD_DIGIT\",\n  CHOOSE_OPERATION: \"CHOOSE_OPERATION\",\n  CLEAR: \"CLEAR\",\n  DELETE_DIGIT: \"DELETE_DIGIT\",\n  EVALUATE: \"EVALUATE\",\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case actions.ADD_DIGIT: {\n      if (\n        state.afterEquals &&\n        (payload.digit === \"0\" || payload.digit === \".\")\n      ) {\n        return state;\n      }\n      if (state.afterEquals) {\n        return {\n          ...state,\n          currOperand: payload.digit,\n          afterEquals: false,\n        };\n      }\n      if (payload.digit === \"0\" && state.currOperand === \"0\") {\n        return state;\n      }\n      if (\n        !state.currOperand &&\n        (payload.digit === \".\" || payload.digit === \"0\")\n      ) {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currOperand.includes(\".\")) {\n        return state;\n      }\n\n      return {\n        ...state,\n        currOperand: `${state.currOperand || \"\"}${payload.digit}`,\n      };\n    }\n\n    case actions.CLEAR: {\n      return { currOperand: \"\", prevOperand: \"\", operation: \"\" };\n    }\n\n    case actions.CHOOSE_OPERATION: {\n      if (!state.currOperand && !state.prevOperand) {\n        return state;\n      }\n\n      if (!state.currOperand) {\n        return { ...state, operation: payload.operation };\n      }\n      if (!state.prevOperand) {\n        return {\n          ...state,\n          prevOperand: state.currOperand,\n          currOperand: \"\",\n          operation: payload.operation,\n        };\n      }\n      return {\n        ...state,\n        currOperand: \"\",\n        operation: payload.operation,\n        prevOperand: evaluate(state),\n      };\n    }\n    case actions.EVALUATE: {\n      if (!state.prevOperand) {\n        return state;\n      }\n      return {\n        ...state,\n        currOperand: evaluate(state),\n        operation: \"\",\n        prevOperand: \"\",\n        afterEquals: true,\n      };\n    }\n    case actions.DELETE_DIGIT: {\n      return {\n        ...state,\n        currOperand: state.currOperand.substring(\n          0,\n          state.currOperand.length - 1\n        ),\n      };\n    }\n    default: {\n      return { state };\n    }\n  }\n};\n\nconst evaluate = ({ prevOperand, currOperand, operation }) => {\n  let sum = \"\";\n  let prev = parseFloat(prevOperand);\n  let curr = parseFloat(currOperand);\n  if (isNaN(prev) || isNaN(curr)) return \"\";\n  switch (operation) {\n    case \"/\": {\n      sum = String(prev / curr);\n      break;\n    }\n    case \"*\": {\n      sum = String(prev * curr);\n      break;\n    }\n    case \"+\": {\n      sum = String(prev + curr);\n      break;\n    }\n    case \"-\": {\n      sum = String(prev - curr);\n      break;\n    }\n    default:\n  }\n  return sum;\n};\n\nconst App = () => {\n  const [{ currOperand, prevOperand, operation }, dispatch] = useReducer(\n    reducer,\n    { currOperand: \"\", prevOperand: \"\", operation: \"\", afterEquals: true }\n  );\n\n  return (\n    <div className={style.container}>\n      <div className={style.output}>\n        <div className={style.top}>\n          {prevOperand} {operation}\n        </div>\n        <div className={style.bottom}>{currOperand}</div>\n      </div>\n      <button\n        className={style.spanTwo}\n        onClick={() => dispatch({ type: actions.CLEAR })}\n      >\n        AC\n      </button>\n      <button\n        className={style.spanOne}\n        onClick={() => dispatch({ type: actions.DELETE_DIGIT })}\n      >\n        DEL\n      </button>\n      <OperationButton dispatch={dispatch} operation=\"/\" />\n      <DigitButton dispatch={dispatch} digit=\"1\" />\n      <DigitButton dispatch={dispatch} digit=\"2\" />\n      <DigitButton dispatch={dispatch} digit=\"3\" />\n      <OperationButton dispatch={dispatch} operation=\"*\" />\n      <DigitButton dispatch={dispatch} digit=\"4\" />\n      <DigitButton dispatch={dispatch} digit=\"5\" />\n      <DigitButton dispatch={dispatch} digit=\"6\" />\n      <OperationButton dispatch={dispatch} operation=\"+\" />\n      <DigitButton dispatch={dispatch} digit=\"7\" />\n      <DigitButton dispatch={dispatch} digit=\"8\" />\n      <DigitButton dispatch={dispatch} digit=\"9\" />\n      <OperationButton dispatch={dispatch} operation=\"-\" />\n      <DigitButton dispatch={dispatch} digit=\".\" />\n      <DigitButton dispatch={dispatch} digit=\"0\" />\n      <button\n        className={style.spanTwo}\n        onClick={() => dispatch({ type: actions.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"output\":\"App_output__2FpYh\",\"top\":\"App_top__PWklc\",\"bottom\":\"App_bottom__2k0cJ\",\"spanTwo\":\"App_spanTwo__2Ld-2\"};"],"sourceRoot":""}